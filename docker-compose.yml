version: '3'

services:
  db:
    container_name: geospatial_app_postgis
    hostname: geospatial_app_postgis
    image: geospatial_app_postgis
    build:
      context: ./db
      dockerfile: Dockerfile
    env_file:
      - ./db/.env
    # deploy:
    #   resources:
    #     limits:
    #       memory: 6G

    volumes:
      - geospatial_app_postgis:/var/lib/geospatial_app_postgis/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d geo_db -U admin_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  geospatial_app_data-pipeline:
    image: geospatial_app_data-pipeline
    container_name: geospatial_app_data-pipeline
    build: 
      context: ./data-pipelines/census
      dockerfile: Dockerfile
    env_file:
      - ./data-pipelines/census/.env
    command: ["python3", "main.py"]  # Command to run your Python script
    depends_on:
      db:
        condition: service_healthy  # Wait for the db service to be healthy
  
  streamlit:
    image: streamlit
    container_name: streamlit
    build: 
      context: ./
      dockerfile: Dockerfile
    env_file:
      - ./data-pipelines/census/.env
    command: ["streamlit", "run", "00_üè†_Homepage.py"]
    restart: on-failure  # Restart the streamlit service only if it exits with a non-zero status
    ports:
      - "8501:8501"

volumes:
  geospatial_app_postgis:
    name: geospatial_app_postgis